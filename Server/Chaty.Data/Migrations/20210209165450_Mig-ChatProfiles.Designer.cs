// <auto-generated />
using System;
using Chaty.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chaty.Data.Migrations
{
    [DbContext(typeof(ChatyContext))]
    [Migration("20210209165450_Mig-ChatProfiles")]
    partial class MigChatProfiles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Chaty.Data.Entity.ChatComments", b =>
                {
                    b.Property<string>("ChatCommentID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChatUserID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSee")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("ChatCommentID");

                    b.HasIndex("ChatUserID");

                    b.ToTable("ChatComments");
                });

            modelBuilder.Entity("Chaty.Data.Entity.ChatProfiles", b =>
                {
                    b.Property<string>("ChatProfileID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bio")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ChatID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ChatProfileID");

                    b.HasIndex("ChatID")
                        .IsUnique()
                        .HasFilter("[ChatID] IS NOT NULL");

                    b.HasIndex("UserID");

                    b.ToTable("ChatProfiles");
                });

            modelBuilder.Entity("Chaty.Data.Entity.ChatUsers", b =>
                {
                    b.Property<string>("ChatUserID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChatID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsExit")
                        .HasColumnType("bit");

                    b.Property<string>("UserID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ChatUserID");

                    b.HasIndex("ChatID");

                    b.HasIndex("UserID");

                    b.ToTable("ChatUsers");
                });

            modelBuilder.Entity("Chaty.Data.Entity.Chats", b =>
                {
                    b.Property<string>("ChatID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ChatID");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Chaty.Data.Entity.Profile", b =>
                {
                    b.Property<string>("ProfileID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bio")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UserID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProfileID");

                    b.HasIndex("UserID")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Chaty.Data.Entity.Users", b =>
                {
                    b.Property<string>("UserID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Chaty.Data.Entity.ChatComments", b =>
                {
                    b.HasOne("Chaty.Data.Entity.ChatUsers", "ChatUsers")
                        .WithMany("ChatComments")
                        .HasForeignKey("ChatUserID");

                    b.Navigation("ChatUsers");
                });

            modelBuilder.Entity("Chaty.Data.Entity.ChatProfiles", b =>
                {
                    b.HasOne("Chaty.Data.Entity.Chats", "Chats")
                        .WithOne("ChatProfiles")
                        .HasForeignKey("Chaty.Data.Entity.ChatProfiles", "ChatID");

                    b.HasOne("Chaty.Data.Entity.Users", "Users")
                        .WithMany("ChatProfiles")
                        .HasForeignKey("UserID");

                    b.Navigation("Chats");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Chaty.Data.Entity.ChatUsers", b =>
                {
                    b.HasOne("Chaty.Data.Entity.Chats", "Chats")
                        .WithMany("ChatUsers")
                        .HasForeignKey("ChatID");

                    b.HasOne("Chaty.Data.Entity.Users", "Users")
                        .WithMany("ChatUsers")
                        .HasForeignKey("UserID");

                    b.Navigation("Chats");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Chaty.Data.Entity.Profile", b =>
                {
                    b.HasOne("Chaty.Data.Entity.Users", "Users")
                        .WithOne("Profile")
                        .HasForeignKey("Chaty.Data.Entity.Profile", "UserID");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Chaty.Data.Entity.ChatUsers", b =>
                {
                    b.Navigation("ChatComments");
                });

            modelBuilder.Entity("Chaty.Data.Entity.Chats", b =>
                {
                    b.Navigation("ChatProfiles");

                    b.Navigation("ChatUsers");
                });

            modelBuilder.Entity("Chaty.Data.Entity.Users", b =>
                {
                    b.Navigation("ChatProfiles");

                    b.Navigation("ChatUsers");

                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
